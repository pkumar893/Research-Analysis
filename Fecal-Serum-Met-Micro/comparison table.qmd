---
title: "Comparison Table"
author: "Prashant Kumar"
format: 
  html:
    code-fold: true
    toc: true
    toc-location: right
    embed-resources: true
editor: source
---

```{r message=FALSE, warning=FALSE, echo=FALSE}
library(readxl)
library(dplyr)
library(stringr)
library(gt)
library(ggplot2)
library(openxlsx)
library(tidyverse)
library(ropls)  # For PLS-DA
library(pheatmap)
library(RColorBrewer)
library(ggpubr)
library(factoextra)
library(FactoMineR)
library(limma)
library(igraph)
library(WGCNA)
library(ggraph)
library(pathview)
library(clusterProfiler)
library(tibble)
library(corrplot)
library(ggforce)
library(ggrepel)
library(Boruta)
```

## Comparison of Important Fecal Microbiota (2022 vs 2024)
```{r warning=FALSE, message=FALSE, include=FALSE}
Fecal1 <- read_excel("E:/Ajit data analysis/Tac/Fecal metablomics 2022 set 1.xlsx")

metabolites <- colnames(Fecal1)[-1]


clean_names <- gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolites)))

clean_names <- gsub("^[0-9]+_|_[0-9]+_|_[0-9]+$|[0-9]+_", "", clean_names)

# gsub("^_|_$", "", gsub("_+", "_", gsub("[() ]", "_", metabolites)))
# gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolites)))

colnames(Fecal1)[-1] <- clean_names

Fecal1 <- Fecal1 %>%
  mutate(
    Group = case_when(
      grepl("WT-Sham", Sample) ~ "Sham",
      grepl("WT-TAC-FMT-V", Sample) ~ "TAC_FMT_V",
      grepl("WT-TAC-FMT-S", Sample) ~ "TAC_FMT_S",
      grepl("WT-TAC-V", Sample) ~ "TAC_V",
      grepl("WT-TAC-", Sample) & !grepl("FMT", Sample) & !grepl("-V", Sample) ~ "TAC",
      TRUE ~ "Other"
    ), .after = "Sample"
  ) %>% 
  mutate(Group = as.factor(Group))

sample_info <- Fecal1 %>% 
  select(Sample, Group) %>% 
  mutate(Group = as.factor(Group))

metabolite_fecal2022 <- Fecal1 %>% select(-Group)
metabolite_fecal2022 <- metabolite_fecal2022 %>% column_to_rownames("Sample")

mice_info <- read_excel("E:/Ajit data analysis/Tac/Tac ready to use.xlsx", 
                        sheet = 6, 
                        range = "A2:N31",
                        col_names = TRUE) %>% 
  select(-S.No, -Gender)
colnames(mice_info)[colnames(mice_info) == "Group"] <- "Sample"
  
integrated_data <- Fecal1 %>%
  left_join(mice_info, by = "Sample") %>% 
  select(-Purpose, -`Peak LS`, -`EF (%)`) %>% 
  rename(
    LV_Thickness = `LV Thickness (mm)`,
    LVW_mg = `LVW (mg)`,
    LVW_TL = `LVW/TL (mg/mm)`,
    HW_TL = `HW/TL (mg/mm)`,
    FS = `FS%`,
    HW_mg = `HW (mg)`,
    GLS = `GLS (%)`
  ) %>% 
  relocate(HW_mg, .after = Sample)
head(integrated_data, 2)

library(kableExtra)
predictors <- setdiff(colnames(integrated_data), 
                      c("Sample", "Group", "LV_Thickness", 
                        "LVW_mg", "LVW_TL","HW_TL", "FS", "EF", "GLS", "HW_mg"))
predictors


n_pad <- 2 - length(predictors) %% 2
if (n_pad < 2) predictors <- c(predictors, rep("", n_pad))

predictor_matrix <- matrix(predictors, ncol = 2, byrow = TRUE)

kable(predictor_matrix, col.names = c("Predictors", "Predictors"))

set.seed(999)
rf_data <- integrated_data[, c(predictors, "HW_mg")]
rf_data <- na.omit(rf_data) 
boruta_output <- Boruta(HW_mg ~ ., data = rf_data, doTrace = 2, maxRuns = 500, ntree = 1000)
attribute_Boruta <- attStats(boruta_output)
confirmed_var_fecal2022 <- getSelectedAttributes(boruta_output, withTentative = FALSE)
confirmed_var_fecal2022
# kable(confirmed_var_fecal2022, col.names = "IMPORTANT PRESDICTORS")

boruta_list <- replicate(3, {
  Boruta(HW_mg ~ ., data = rf_data, maxRuns = 500, ntree = 1000)
}, simplify = FALSE)

# confirmed metabolites from each run
confirmed_lists <- lapply(boruta_list, function(b) {
  rownames(attStats(b)[attStats(b)$decision == "Confirmed", ])
})

boruta_list
vars_fecal2022 <- Reduce(intersect, confirmed_lists)
kable(vars_fecal2022, col.names = "IMPORTANT PRESDICTORS")

importance_fecal2022 <- attStats(boruta_output)

importance_fecal2022 <- importance_fecal2022[order(-importance_fecal2022$meanImp), ]

top15 <- head(importance_fecal2022, 15)

table_F2022 <- data.frame(
  Fecal_2022 = rownames(top15),
  MeanImportance = top15$meanImp
)

print(table_F2022, row.names = FALSE)

library(mgcv)
formula <- as.formula(paste("HW_mg ~", paste0("s(", vars_fecal2022, ", by = Group)", collapse = " + ")))
model <- gam(formula, data = integrated_data, method = "REML", select  = TRUE)
summary(model)
```

```{r message=FALSE, warning=FALSE, include=FALSE}
Fecal2024 <- read_excel("E:\\Ajit data analysis\\Tac\\fecal 2024\\Fecal metablomics 2024.xlsx")


metabolites <- colnames(Fecal2024)[-1]


clean_names <- gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolites)))

clean_names <- gsub("^[0-9]+_|_[0-9]+_|_[0-9]+$|[0-9]+_", "", clean_names)

# gsub("^_|_$", "", gsub("_+", "_", gsub("[() ]", "_", metabolites)))
# gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolites)))

colnames(Fecal2024)[-1] <- clean_names


metabolites <- colnames(Fecal2024)[-c(1, 2)]
clean_names <- gsub("[() ]", "_", metabolites)
colnames(Fecal2024)[-c(1, 2)] <- clean_names

Fecal2024 <- Fecal2024 %>%
  mutate(
    Group = case_when(
      grepl("WT-Sham", Sample) ~ "Sham",
      grepl("WT-TAC-Post-V", Sample) ~ "TAC_FMT_Post",
      grepl("WT-TAC-V-Orn-Ty-DI-", Sample) ~ "TAC_V_Orn",
      grepl("WT-TAC-V", Sample) ~ "TAC_V",
      grepl("WT-TAC-", Sample) & !grepl("FMT", Sample) & !grepl("-V", Sample) ~ "TAC",
      TRUE ~ "Other"
    ), .after = "Sample"
  ) %>% 
  mutate(Group = as.factor(Group))

sample_info <- Fecal2024 %>% 
  select(Sample, Group) %>% 
  mutate(Group = as.factor(Group))

metabolite_Fecal2024 <- Fecal2024 %>% select(-Group)
metabolite_Fecal2024 <- metabolite_Fecal2024 %>% column_to_rownames("Sample")

mice_info <- read_excel("E:/Ajit data analysis/Tac/Tac ready to use.xlsx", 
                        sheet = 6, 
                        range = "A33:N62",
                        col_names = TRUE) %>% 
  select(-S.No, -Gender)

colnames(mice_info)[colnames(mice_info) == "Group"] <- "Sample"
  
integrated_data <- Fecal2024 %>%
  left_join(mice_info, by = "Sample") %>% 
  select(-Purpose, -`Peak LS`, -`EF (%)`) %>% 
  rename(
    LV_Thickness = `LV Thickness (mm)`,
    LVW_mg = `LVW (mg)`,
    LVW_TL = `LVW/TL (mg/mm)`,
    HW_TL = `HW/TL (mg/mm)`,
    FS = `FS%`,
    HW_mg = `HW (mg)`,
    GLS = `GLS (%)`
  ) %>% 
  relocate(HW_mg, .after = Sample)
head(integrated_data, 2)
predictors <- setdiff(colnames(integrated_data), 
                      c("Sample", "Group", "LV_Thickness", 
                        "LVW_mg", "LVW_TL","HW_TL", "FS", "EF", "GLS", "HW_mg"))
head(predictors, 10)
set.seed(999)
rf_data <- integrated_data[, c(predictors, "HW_mg")]
rf_data <- na.omit(rf_data) 
boruta_output <- Boruta(HW_mg ~ ., data = rf_data, doTrace = 2, maxRuns = 300, ntree = 1000)
attribute_Boruta <- attStats(boruta_output)
confirmed_var_fecal2024 <- getSelectedAttributes(boruta_output, withTentative = FALSE)
# confirmed_var_fecal2024
# kable(confirmed_var_fecal2024, col.names = "IMPORTANT PRESDICTORS")

boruta_list <- replicate(3, {
  Boruta(HW_mg ~ ., data = rf_data, maxRuns = 300, ntree = 1000)
}, simplify = FALSE)

# confirmed metabolites from each run
confirmed_lists <- lapply(boruta_list, function(b) {
  rownames(attStats(b)[attStats(b)$decision == "Confirmed", ])
})

boruta_list
vars_fecal2024 <- Reduce(intersect, confirmed_lists)
kable(vars_fecal2024, col.names = "IMPORTANT PRESDICTORS")

importance_fecal2024 <- attStats(boruta_output)

importance_fecal2024 <- importance_fecal2024[order(-importance_fecal2024$meanImp), ]

top15 <- head(importance_fecal2024, 15)

table_F2024 <- data.frame(
  Fecal_2024 = rownames(top15),
  MeanImportance = top15$meanImp
)

print(table_F2024, row.names = FALSE)

formula <- as.formula(paste("HW_mg ~", paste0("s(", vars_fecal2024, ", by = Group)", collapse = " + ")))
model_F2024 <- gam(formula, data = integrated_data, method = "REML", select  = TRUE)
summary(model_F2024)
```

```{r}
library(dplyr)
library(gt)

table_F2022$Row <- 1:nrow(table_F2022)
table_F2024$Row <- 1:nrow(table_F2024)


colnames(table_F2022) <- c("table_F2022", "MeanImportance_2022", "Row")
colnames(table_F2024) <- c("table_F2024", "MeanImportance_2024", "Row")


comparison_table <- full_join(table_F2022, table_F2024, by = "Row") %>%
  select(table_F2022, MeanImportance_2022, table_F2024, MeanImportance_2024)


gt_table <- comparison_table %>%
  gt() %>%
  tab_header(
    title = "Comparison of Important Fecal Microbiota (2022 vs 2024)"
  ) %>%
  cols_label(
    table_F2022 = "Microbiota",
    MeanImportance_2022 = "Mean Importance",
    table_F2024 = "Microbiota",
    MeanImportance_2024 = "Mean Importance"
  ) %>%
  tab_spanner(
    label = "2022",
    columns = c(table_F2022, MeanImportance_2022)
  ) %>%
  tab_spanner(
    label = "2024",
    columns = c(table_F2024, MeanImportance_2024)
  ) %>%
  fmt_number(
    columns = c(MeanImportance_2022, MeanImportance_2024),
    decimals = 4
  )

gt_table
```


## Significance of Fecal Microbiota 2022 by Group
```{r}
library(dplyr)
library(tidyr)
library(stringr)
library(gt)
# Fecal 2022
gam_summary <- summary(model)

smooth_terms <- as.data.frame(gam_summary$s.table)

smooth_terms$Term <- rownames(smooth_terms)

smooth_terms <- smooth_terms %>%
  mutate(
    Metabolite = str_extract(Term, "(?<=s\\().+?(?=\\):)"),
    Group = str_extract(Term, "(?<=\\:Group).*")
  )

smooth_terms <- smooth_terms %>%
  mutate(Significance = case_when(
    `p-value` < 0.001 ~ "***",
    `p-value` < 0.01  ~ "**",
    `p-value` < 0.05  ~ "*",
    `p-value` < 0.1   ~ ".",
    TRUE             ~ ""
  ))

smooth_wide <- smooth_terms %>%
  select(Metabolite, Group, Significance) %>%
  pivot_wider(names_from = Group, values_from = Significance)

smooth_wide %>%
  gt() %>%
  tab_header(
    title = "GAM Smooth Term Significance of Fecal 2022 Metabolites by Group",
    subtitle = "Stars indicate level of significance for each metabolite-group interaction"
  )%>%
  cols_width(
    Metabolite ~ px(200),
    Sham ~ px(100),
    TAC ~ px(100),
    TAC_FMT_S ~ px(120),
    TAC_FMT_V ~ px(120),
    TAC_V ~ px(100)
  ) %>% 
    tab_footnote(
    footnote = "p-value: ~0 ‘***’, 0.001 ‘**’, 0.01 ‘*’, 0.05 ‘.’, 0.1 ‘ ’, 1",
    locations = cells_title(groups = "title")
  )

```

## Significance of Fecal Microbiota 2024 by Group
```{r}
library(dplyr)
library(tidyr)
library(stringr)
library(gt)
# Fecal 2022
gam_summary <- summary(model_F2024)

smooth_terms <- as.data.frame(gam_summary$s.table)

smooth_terms$Term <- rownames(smooth_terms)

smooth_terms <- smooth_terms %>%
  mutate(
    Metabolite = str_extract(Term, "(?<=s\\().+?(?=\\):)"),
    Group = str_extract(Term, "(?<=\\:Group).*")
  )

smooth_terms <- smooth_terms %>%
  mutate(Significance = case_when(
    `p-value` < 0.001 ~ "***",
    `p-value` < 0.01  ~ "**",
    `p-value` < 0.05  ~ "*",
    `p-value` < 0.1   ~ ".",
    TRUE             ~ ""
  ))

smooth_wide <- smooth_terms %>%
  select(Metabolite, Group, Significance) %>%
  pivot_wider(names_from = Group, values_from = Significance)

smooth_wide %>%
  gt() %>%
  tab_header(
    title = "GAM Smooth Term Significance of Fecal 2024 Microbiota by Group",
    subtitle = "Stars indicate level of significance for each metabolite-group interaction"
  )%>%
  cols_width(
    Metabolite ~ px(200),
    Sham ~ px(100),
    TAC ~ px(100),
    TAC_FMT_Post ~ px(120),
    TAC_V ~ px(120),
    TAC_V_Orn ~ px(100)
  ) %>% 
    tab_footnote(
    footnote = "p-value: ~0 ‘***’, 0.001 ‘**’, 0.01 ‘*’, 0.05 ‘.’, 0.1 ‘ ’, 1",
    locations = cells_title(groups = "title")
  )

```


## Comparison of Important Serum Metabolites (2022 vs 2024)
```{r include=FALSE}
serum2022 <- read_excel("E:\\Ajit data analysis\\Tac\\serum 2022\\serum metablomics 2022.xlsx")

metabolite <- colnames(serum2022)[-1]

clean_names <- gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolite)))

clean_names <- gsub("^[0-9]+_|_[0-9]+_|_[0-9]+$|[0-9]+_", "", clean_names)

# gsub("^_|_$", "", gsub("_+", "_", gsub("[() ]", "_", metabolite)))
# gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolite)))

colnames(serum2022)[-1] <- clean_names


metabolite <- colnames(serum2022)[-c(1, 2)]
clean_names <- gsub("[() ]", "_", metabolite)
colnames(serum2022)[-c(1, 2)] <- clean_names


serum2022 <- serum2022 %>% 
  rename(Sample = Group) 

serum2022 <- serum2022 %>% 
  mutate(
    Group = case_when(
      grepl("WT-Sham", Sample) ~ "Sham",
      grepl("WT-TAC-V", Sample) ~ "TAC_V",
      grepl("WT-TAC-", Sample) & !grepl("FMT", Sample) & !grepl("-V", Sample) ~ "TAC",
      TRUE ~ "Other"
    ), .after = "Sample"
  ) %>% 
  mutate(Group = as.factor(Group))

sample_info <- serum2022 %>% select(Sample, Group) %>% mutate(Group = as.factor(Group))
metabolite_serum2022 <- serum2022 %>% select(-Group)

metabolite_serum2022 <- metabolite_serum2022 %>% column_to_rownames("Sample")

mice_info <- read_excel("E:/Ajit data analysis/Tac/Tac ready to use.xlsx", 
                        sheet = 6, 
                        range = "A2:N20",
                        col_names = TRUE) %>% 
  select(-S.No, -Gender)

colnames(mice_info)[colnames(mice_info) == "Group"] <- "Sample"
  
integrated_data <- serum2022 %>%
  left_join(mice_info, by = "Sample") %>% 
  select(-Purpose, -`Peak LS`, -`EF (%)`) %>% 
  rename(
    LV_Thickness = `LV Thickness (mm)`,
    LVW_mg = `LVW (mg)`,
    LVW_TL = `LVW/TL (mg/mm)`,
    HW_TL = `HW/TL (mg/mm)`,
    FS = `FS%`,
    HW_mg = `HW (mg)`,
    GLS = `GLS (%)`
  ) %>% 
  relocate(HW_mg, .after = Sample)
head(integrated_data, 2)

predictors <- setdiff(colnames(integrated_data), 
                      c("Sample", "Group", "LV_Thickness", 
                        "LVW_mg", "LVW_TL","HW_TL", "FS", "EF", "GLS", "HW_mg"))
head(predictors, 10)

set.seed(999)
rf_data <- integrated_data[, c(predictors, "HW_mg")]
rf_data <- na.omit(rf_data) 
boruta_output <- Boruta(HW_mg ~ ., data = rf_data, doTrace = 2, maxRuns = 200, ntree = 1000)
attribute_Boruta <- attStats(boruta_output)
confirmed_var_serum2022 <- getSelectedAttributes(boruta_output, withTentative = FALSE)
# kable(confirmed_var_serum2022, col.names = "IMPORTANT PRESDICTORS")

boruta_list <- replicate(3, {
  Boruta(HW_mg ~ ., data = rf_data, maxRuns = 200, ntree = 1000)
}, simplify = FALSE)

# confirmed metabolites from each run
confirmed_lists <- lapply(boruta_list, function(b) {
  rownames(attStats(b)[attStats(b)$decision == "Confirmed", ])
})

boruta_list
vars_serum2022 <- Reduce(intersect, confirmed_lists)
kable(vars_serum2022, col.names = "IMPORTANT PRESDICTORS")

importance_serum2022 <- attStats(boruta_output)

importance_serum2022 <- importance_serum2022[order(-importance_serum2022$meanImp), ]

top15 <- head(importance_serum2022, 15)

table_S2022 <- data.frame(
  Serum_2022 = rownames(top15),
  MeanImportance = top15$meanImp
)

print(table_S2022, row.names = FALSE)
formula <- as.formula(paste("HW_mg ~", paste0("s(", vars_serum2022, ", by = Group)", collapse = " + ")))
model_S2022 <- gam(formula, data = integrated_data, method = "REML", select  = TRUE)
summary(model_S2022)
```


```{r message=FALSE, warning=FALSE, include=FALSE}
serum2024 <- read_excel("E:\\Ajit data analysis\\Tac\\serum 2024\\serum metablomics 2024.xlsx")

metabolites <- colnames(serum2024)[-1]


clean_names <- gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolites)))

clean_names <- gsub("^[0-9]+_|_[0-9]+_|_[0-9]+$|[0-9]+_", "", clean_names)

# gsub("^_|_$", "", gsub("_+", "_", gsub("[() ]", "_", metabolites)))
# gsub("^_|_$", "", gsub("_+", "_", gsub("[-() ]", "_", metabolites)))

colnames(serum2024)[-1] <- clean_names

metabolites <- colnames(serum2024)[-c(1, 2)]
clean_names <- gsub("[() ]", "_", metabolites)
colnames(serum2024)[-c(1, 2)] <- clean_names


serum2024 <- serum2024 %>% 
  rename(Sample = Group) 

serum2024 <- serum2024 %>% 
  mutate(
    Group = case_when(
      grepl("WT-Sham", Sample) ~ "Sham",
      grepl("WT-TAC-Tryptophan", Sample) ~ "TAC Tryptophan",
      grepl("WT-TAC-Tryptamine \\(IP\\)", Sample) ~ "TAC Tryptamine (IP)",
      grepl("WT-TAC-Tryptamine \\(Oral\\)", Sample) ~ "TAC-Tryptamine (Oral)",
      grepl("WT-TAC-", Sample) & !grepl("FMT", Sample) & !grepl("-V", Sample) ~ "TAC",
      TRUE ~ "Other"
    ), .after = "Sample"
  ) %>% 
  mutate(Group = as.factor(Group))

# table(serum2024$Group)

sample_info <- serum2024 %>% select(Sample, Group) %>% mutate(Group = as.factor(Group))
metabolite_serum2024 <- serum2024 %>% select(-Group)

metabolite_serum2024 <- metabolite_serum2024 %>% column_to_rownames("Sample")

mice_info <- read_excel("E:/Ajit data analysis/Tac/Tac ready to use.xlsx", 
                        sheet = 6, 
                        range = "A64:N97",
                        col_names = TRUE) %>% 
  select(-S.No, -Gender)

colnames(mice_info)[colnames(mice_info) == "Group"] <- "Sample"
  
integrated_data <- serum2024 %>%
  left_join(mice_info, by = "Sample") %>% 
  select(-Purpose, -`Peak LS`, -`EF (%)`) %>% 
  rename(
    LV_Thickness = `LV Thickness (mm)`,
    LVW_mg = `LVW (mg)`,
    LVW_TL = `LVW/TL (mg/mm)`,
    HW_TL = `HW/TL (mg/mm)`,
    FS = `FS%`,
    HW_mg = `HW (mg)`,
    GLS = `GLS (%)`
  ) %>% 
  relocate(HW_mg, .after = Sample)
head(integrated_data, 2)

predictors <- setdiff(colnames(integrated_data), 
                      c("Sample", "Group", "LV_Thickness", 
                        "LVW_mg", "LVW_TL","HW_TL", "FS", "EF", "GLS", "HW_mg"))
head(predictors, 10)

set.seed(999)
rf_data <- integrated_data[, c(predictors, "HW_mg")]
rf_data <- na.omit(rf_data) 
boruta_output <- Boruta(HW_mg ~ ., data = rf_data, doTrace = 2, maxRuns = 500, ntree = 1000)
attribute_Boruta <- attStats(boruta_output)
confirmed_var_serum2024 <- getSelectedAttributes(boruta_output, withTentative = FALSE)
# kable(confirmed_var_serum2024, col.names = "IMPORTANT PRESDICTORS")

boruta_list <- replicate(3, {
  Boruta(HW_mg ~ ., data = rf_data, maxRuns = 500, ntree = 1000)
}, simplify = FALSE)

# confirmed metabolites from each run
confirmed_lists <- lapply(boruta_list, function(b) {
  rownames(attStats(b)[attStats(b)$decision == "Confirmed", ])
})

boruta_list
vars_serum2024 <- Reduce(intersect, confirmed_lists)
kable(vars_serum2024, col.names = "IMPORTANT PRESDICTORS")
importance_serum2024 <- attStats(boruta_output)

importance_serum2024 <- importance_serum2024[order(-importance_serum2024$meanImp), ]

top15 <- head(importance_serum2024, 15)

table_S2024 <- data.frame(
  Serum_2024 = rownames(top15),
  MeanImportance = top15$meanImp
)

print(table_S2024, row.names = FALSE)

formula <- as.formula(paste("HW_mg ~", paste0("s(", vars_serum2024, ", by = Group)", collapse = " + ")))
model_S2024 <- gam(formula, data = integrated_data, method = "REML", select  = TRUE)
summary(model_S2024)
```

```{r}
library(dplyr)
library(gt)

table_S2022$Row <- 1:nrow(table_S2022)
table_S2024$Row <- 1:nrow(table_S2024)


colnames(table_S2022) <- c("Serum_2022", "MeanImportance_2022", "Row")
colnames(table_S2024) <- c("Serum_2024", "MeanImportance_2024", "Row")


comparison_table <- full_join(table_S2022, table_S2024, by = "Row") %>%
  select(Serum_2022, MeanImportance_2022, Serum_2024, MeanImportance_2024)


gt_table <- comparison_table %>%
  gt() %>%
  tab_header(
    title = "Comparison of Important Serum Metabolite (2022 vs 2024)"
  ) %>%
  cols_label(
    Serum_2022 = "Metabolite",
    MeanImportance_2022 = "Mean Importance",
    Serum_2024 = "Metabolite",
    MeanImportance_2024 = "Mean Importance"
  ) %>%
  tab_spanner(
    label = "2022",
    columns = c(Serum_2022, MeanImportance_2022)
  ) %>%
  tab_spanner(
    label = "2024",
    columns = c(Serum_2024, MeanImportance_2024)
  ) %>%
  fmt_number(
    columns = c(MeanImportance_2022, MeanImportance_2024),
    decimals = 4
  )

gt_table
```


## Significance of Serum Metabolite 2022 by Group
```{r}
library(dplyr)
library(tidyr)
library(stringr)
library(gt)
# Fecal 2022
gam_summary <- summary(model_S2022)

smooth_terms <- as.data.frame(gam_summary$s.table)

smooth_terms$Term <- rownames(smooth_terms)

smooth_terms <- smooth_terms %>%
  mutate(
    Metabolite = str_extract(Term, "(?<=s\\().+?(?=\\):)"),
    Group = str_extract(Term, "(?<=\\:Group).*")
  )

smooth_terms <- smooth_terms %>%
  mutate(Significance = case_when(
    `p-value` < 0.001 ~ "***",
    `p-value` < 0.01  ~ "**",
    `p-value` < 0.05  ~ "*",
    `p-value` < 0.1   ~ ".",
    TRUE             ~ ""
  ))

smooth_wide <- smooth_terms %>%
  select(Metabolite, Group, Significance) %>%
  pivot_wider(names_from = Group, values_from = Significance)

smooth_wide %>%
  gt() %>%
  tab_header(
    title = "GAM Smooth Term Significance of Serum 2022 Metabolite by Group",
    subtitle = "Stars indicate level of significance for each metabolite-group interaction"
  )%>%
  cols_width(
    Metabolite ~ px(200),
    Sham ~ px(100),
    TAC ~ px(100),
    TAC_V ~ px(120)
  ) %>% 
    tab_footnote(
    footnote = "p-value: ~0 ‘***’, 0.001 ‘**’, 0.01 ‘*’, 0.05 ‘.’, 0.1 ‘ ’, 1",
    locations = cells_title(groups = "title")
  )

```


## Significance of Serum Metabolite 2024 by Group
```{r}
library(dplyr)
library(tidyr)
library(stringr)
library(gt)
# Fecal 2022
gam_summary <- summary(model_S2024)

smooth_terms <- as.data.frame(gam_summary$s.table)

smooth_terms$Term <- rownames(smooth_terms)

smooth_terms <- smooth_terms %>%
  mutate(
    Metabolite = str_extract(Term, "(?<=s\\().+?(?=\\):)"),
    Group = str_extract(Term, "(?<=\\:Group).*")
  )

smooth_terms <- smooth_terms %>%
  mutate(Significance = case_when(
    `p-value` < 0.001 ~ "***",
    `p-value` < 0.01  ~ "**",
    `p-value` < 0.05  ~ "*",
    `p-value` < 0.1   ~ ".",
    TRUE             ~ ""
  ))

smooth_wide <- smooth_terms %>%
  select(Metabolite, Group, Significance) %>%
  pivot_wider(names_from = Group, values_from = Significance)

smooth_wide %>%
  gt() %>%
  tab_header(
    title = "GAM Smooth Term Significance of Serum 2024 Metabolites by Group",
    subtitle = "Stars indicate level of significance for each metabolite-group interaction"
  )%>%
  cols_width(
    Metabolite ~ px(200),
    TAC ~ px(100),
    `TAC-Tryptamine (Oral)` ~ px(120),
    `TAC Tryptamine (IP)` ~ px(120),
    `TAC Tryptophan` ~ px(100)
  ) %>% 
    tab_footnote(
    footnote = "p-value: ~0 ‘***’, 0.001 ‘**’, 0.01 ‘*’, 0.05 ‘.’, 0.1 ‘ ’, 1",
    locations = cells_title(groups = "title")
  )

```
